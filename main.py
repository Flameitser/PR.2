# -*- coding: utf-8 -*-
"""main.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1I5UnbYGrRXIuaWqDtEohOFRWXw9dt-c4
"""

import random
from datetime import datetime, timedelta
import pandas as pd

# Создание классов для студентов и зачетки
class GradeBook:
    def __init__(self, subjects):
        self.entries = subjects

class Student:
    def __init__(self, first_name, last_name, birthdate, gradebook):
        self.first_name = first_name
        self.last_name = last_name
        self.birthdate = birthdate
        self.gradebook = gradebook

# Функция для генерации случайных дат
def random_date(start, end):
    return start + timedelta(days=random.randint(0, (end - start).days))

# Функция для генерации случайных имен и фамилий
def random_name():
    first_names = ["Алексей", "Иван", "Петр", "Михаил", "Дмитрий", "Екатерина", "Мария", "Анна", "Елена", "Ольга"]
    last_names = ["Иванов", "Петров", "Сидоров", "Кузнецов", "Попов", "Смирнов", "Федоров", "Морозов", "Новиков", "Соколов"]
    return random.choice(first_names), random.choice(last_names)

# Функция для генерации случайной зачетки
def random_gradebook():
    subjects = ["Математика", "Физика", "Информатика", "История", "Литература", "Химия", "Биология"]
    professors = ["Сергей Иванович Петров", "Мария Ивановна Соколова", "Алексей Николаевич Кузнецов", "Ольга Сергеевна Новикова", "Петр Петрович Смирнов"]

    entries = []
    num_subjects = random.randint(3, 5)
    for _ in range(num_subjects):
        subject = random.choice(subjects)
        exam_date = random_date(datetime(2023, 1, 1), datetime(2023, 12, 31))
        professor = random.choice(professors)
        entries.append((subject, exam_date, professor))
    return GradeBook(entries)

# Генерация списка студентов
def generate_students(num_students):
    students = []
    for _ in range(num_students):
        first_name, last_name = random_name()
        birthdate = random_date(datetime(2000, 1, 1), datetime(2005, 12, 31))
        gradebook = random_gradebook()
        student = Student(first_name, last_name, birthdate, gradebook)
        students.append(student)
    return students

# Вывод таблицы с ФИО всех преподавателей
def print_professors_table(students):
    professors_set = set()
    for student in students:
        for subject, exam_date, professor in student.gradebook.entries:
            professors_set.add(professor)

    professors_list = list(professors_set)
    professors_df = pd.DataFrame(professors_list, columns=["ФИО Преподавателя"])
    print(professors_df)

# Генерация и вывод данных
num_students = 10  # Количество студентов
students = generate_students(num_students)
print_professors_table(students)